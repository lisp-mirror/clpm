variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_HUB_CI_REPO: daewok/clpm-ci

include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'
  - local: "/.gitlab-ci.versions.yml"

stages:
  - prep
  - build
  - test

##############################################################################
# Build Docker images for CI
##############################################################################

.alpine-image:
  stage: prep
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      /kaniko/executor --cache --cache-repo $CI_REGISTRY_IMAGE/kaniko \
                       --context $CI_PROJECT_DIR \
                       --build-arg sbcl_version=$SBCL_VERSION \
                       --build-arg alpine_version=$ALPINE_VERSION \
                       --dockerfile $CI_PROJECT_DIR/docker/Dockerfile.alpine-ci \
                       --destination $CI_REGISTRY_IMAGE/ci:$SBCL_VERSION-alpine$ALPINE_VERSION-$ARCH
  rules:
    - if: '($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH) && ($CI_PROJECT_NAMESPACE == "clpm" || $ARCH == "amd64")'
      changes:
        - .gitlab-ci.versions.yml
        - docker/Dockerfile.alpine-ci

.debian-image:
  stage: prep
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      /kaniko/executor --cache --cache-repo $CI_REGISTRY_IMAGE/kaniko \
                       --context $CI_PROJECT_DIR \
                       --build-arg sbcl_version=$SBCL_VERSION \
                       --build-arg debian_version=$DEBIAN_VERSION \
                       --customPlatform=linux/$ARCH \
                       --dockerfile $CI_PROJECT_DIR/docker/Dockerfile.debian-ci \
                       --destination $CI_REGISTRY_IMAGE/ci:$SBCL_VERSION-$DEBIAN_VERSION-$ARCH
  rules:
    - if: '($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH) && ($CI_PROJECT_NAMESPACE == "clpm" || $ARCH == "amd64")'
      changes:
        - .gitlab-ci.versions.yml
        - docker/Dockerfile.debian-ci

alpine-image:amd64:
  extends: .alpine-image
  variables:
    ARCH: amd64

alpine-image:arm64:
  extends: .alpine-image
  variables:
    ARCH: arm64
  tags:
    - arm64

debian-image:amd64:
  extends: .debian-image
  variables:
    ARCH: amd64

debian-image:arm64:
  extends: .debian-image
  variables:
    ARCH: arm64
  tags:
    - arm64

debian-image:arm:
  extends: .debian-image
  variables:
    ARCH: arm
  tags:
    - arm64
  rules:
    - when: on_success

##############################################################################
# Build static releases
##############################################################################

.static-release:
  stage: build
  image: $CI_REGISTRY_IMAGE/ci:$SBCL_VERSION-alpine$ALPINE_VERSION-$ARCH
  before_script:
    # This looks a little funky, but only one of
    # $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME and $CI_COMMIT_BRANCH will ever be
    # defined at once.
    - git checkout -B $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME $CI_COMMIT_BRANCH $CI_COMMIT_SHA
  script:
    - sbcl --script scripts/build-release.lisp --static
  artifacts:
    paths:
      - releases/

static-release:linux:amd64:
  extends: .static-release
  variables:
    ARCH: amd64

static-release:linux:arm64:
  extends: .static-release
  variables:
    ARCH: arm64
  tags:
    - arm64
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "clpm"'

##############################################################################
# Build dynamic releases
##############################################################################

.dynamic-release:
  stage: build
  image: $CI_REGISTRY_IMAGE/ci:$SBCL_VERSION-$DEBIAN_VERSION-$ARCH
  before_script:
    # This looks a little funky, but only one of
    # $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME and $CI_COMMIT_BRANCH will ever be
    # defined at once.
    - git checkout -B $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME $CI_COMMIT_BRANCH $CI_COMMIT_SHA
  script:
    - sbcl --script scripts/build-release.lisp
  artifacts:
    paths:
      - releases/

dynamic-release:linux:amd64:
  extends: .dynamic-release
  variables:
    ARCH: amd64

dynamic-release:linux:arm64:
  extends: .dynamic-release
  variables:
    ARCH: arm64
  tags:
    - arm64
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "clpm"'

dynamic-release:linux:armv7:
  extends: .dynamic-release
  variables:
    ARCH: arm
  tags:
    - arm64
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "clpm"'

dynamic-release:macos:amd64:
  stage: build
  extends: .dynamic-release
  tags:
    - macos-0.4-amd64
  needs: []
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "clpm"'

dynamic-release:windows:amd64:
  stage: build
  image: $CI_REGISTRY_IMAGE/ci:$SBCL_VERSION-windowsservercore
  variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: none
    GIT_CHECKOUT: "false"
  before_script:
    # This looks a little funky, but only one of
    # $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME and $CI_COMMIT_BRANCH will ever be
    # defined at once.
    - git checkout -B $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME $CI_COMMIT_BRANCH $CI_COMMIT_SHA
    - git submodule init
    - git submodule update
  script:
    - $env:WIX = "C:\wix"
    - sbcl --script scripts/build-release.lisp
    - sbcl --script scripts/build-msi.lisp
  artifacts:
    paths:
      - releases/
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "clpm"'
  needs: []
  tags:
    - windows-amd64

##############################################################################
# Tests
##############################################################################

test-static-release:linux:amd64:
  stage: test
  image: clfoundation/sbcl:$SBCL_VERSION
  variables:
    ARCH: amd64
  before_script:
    # This looks a little funky, but only one of
    # $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME and $CI_COMMIT_BRANCH will ever be
    # defined at once.
    - git checkout -B $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME $CI_COMMIT_BRANCH $CI_COMMIT_SHA
  script:
    # Install from the release archive!
    - VERSION=$(sbcl --script scripts/version.lisp)
    - cd /tmp
    - tar xvf $CI_PROJECT_DIR/releases/static/clpm-$VERSION-linux-$ARCH.tar.gz
    - cd clpm-$VERSION-linux-$ARCH
    - sh install.sh
    - clpm version -VV
    - cd $CI_PROJECT_DIR
    - sbcl --script scripts/test.lisp
  needs:
    - static-release:linux:amd64
